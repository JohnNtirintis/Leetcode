public class Solution {
     public bool IsCovered(int[][] ranges, int left, int right) {
        //  Sort 2d array in ascending order
        Array.Sort(ranges, (a, b) => a[0] == b[0] ? a[1].CompareTo(b[1]) : a[0].CompareTo(b[0]));

        int currentStart = left;


        foreach (int[] interval in ranges) {
            if (currentStart > right) {
                // No need to continue if we have already covered the range
                break;
            }

            // Check if currentStart is within the interval
            if (currentStart >= interval[0] && currentStart <= interval[1]) {
                // moves on to the next unchecked/uncovered number
                currentStart = interval[1] + 1;  
            }
            else if (currentStart < interval[0]) {
                return false;
            }
        }

        return currentStart > right;
    }
}